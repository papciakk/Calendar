<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:security="http://www.springframework.org/schema/security"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd">

    <security:http auto-config="true">
        <!--<security:intercept-url pattern="/rest/**" access="hasRole('ROLE_USER')" />-->
        <security:intercept-url pattern="/rest/**" access="isAnonymous()"/>
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userDetailsService"/>
    </security:authentication-manager>

    <beans:bean id="userDetailsService" class="pl.edu.agh.tai.security.MongoUserDetailsService"/>

    <!--<security:authentication-manager>
        <security:authentication-provider>
            <security:password-encoder ref="bcryptPasswordEncoder" />
            <security:jdbc-user-service
                    data-source-ref="dataSource"
                    users-by-username-query="select username, password, enabled from users where username=?"
                    authorities-by-username-query="select username, authority from authorities where username=?  " />
        </security:authentication-provider>
    </security:authentication-manager>

    <beans:bean id="bcryptPasswordEncoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="10" />
    </beans:bean>-->

</beans:beans>